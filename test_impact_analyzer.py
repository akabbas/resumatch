#!/usr/bin/env python3
"""
Test script for the Impact Analyzer
Demonstrates how the analyzer evaluates different types of resume bullet points
"""

from services.resume_health_analyzer import ResumeHealthAnalyzer, analyze_resume_health

def test_impact_analyzer():
    """Test the impact analyzer with various resume examples"""
    
    print("ðŸš€ Resume Health Score - Impact Analyzer Test")
    print("=" * 60)
    
    # Test Case 1: Weak resume with poor impact
    print("\nðŸ“‹ Test Case 1: Weak Resume (Poor Impact)")
    print("-" * 40)
    
    weak_resume = {
        'experience': '''
        â€¢ Helped with data analysis and reporting
        â€¢ Was responsible for maintaining database
        â€¢ Assisted in project coordination
        â€¢ Handled customer inquiries
        â€¢ Monitored system performance
        â€¢ Documented procedures
        '''
    }
    
    result1 = analyze_resume_health(weak_resume)
    print(f"Overall Grade: {result1.overall_grade.value}")
    print(f"Overall Score: {result1.overall_score:.1f}/100")
    print(f"Summary: {result1.summary}")
    
    impact1 = result1.dimension_scores['impact']
    print(f"\nImpact Analysis:")
    print(f"Grade: {impact1.grade.value}")
    print(f"Score: {impact1.score:.1f}/100")
    print("Feedback:")
    for feedback in impact1.feedback:
        print(f"  â€¢ {feedback}")
    print("Suggestions:")
    for suggestion in impact1.suggestions:
        print(f"  â€¢ {suggestion}")
    
    # Test Case 2: Mixed resume with some good points
    print("\nðŸ“‹ Test Case 2: Mixed Resume (Some Good Impact)")
    print("-" * 40)
    
    mixed_resume = {
        'experience': '''
        â€¢ Helped with data analysis and reporting
        â€¢ Increased sales by 15% through targeted campaigns
        â€¢ Was responsible for maintaining database
        â€¢ Led team of 3 people to complete project on time
        â€¢ Assisted in project coordination
        â€¢ Achieved 20% improvement in customer satisfaction
        '''
    }
    
    result2 = analyze_resume_health(mixed_resume)
    print(f"Overall Grade: {result2.overall_grade.value}")
    print(f"Overall Score: {result2.overall_score:.1f}/100")
    print(f"Summary: {result2.summary}")
    
    impact2 = result2.dimension_scores['impact']
    print(f"\nImpact Analysis:")
    print(f"Grade: {impact2.grade.value}")
    print(f"Score: {impact2.score:.1f}/100")
    print("Feedback:")
    for feedback in impact2.feedback:
        print(f"  â€¢ {feedback}")
    print("Suggestions:")
    for suggestion in impact2.suggestions:
        print(f"  â€¢ {suggestion}")
    
    # Test Case 3: Strong resume with excellent impact
    print("\nðŸ“‹ Test Case 3: Strong Resume (Excellent Impact)")
    print("-" * 40)
    
    strong_resume = {
        'experience': '''
        â€¢ Increased sales by 25% through targeted marketing campaigns, resulting in $500K additional revenue
        â€¢ Led team of 5 developers to deliver project 2 weeks early, saving $50K in development costs
        â€¢ Achieved 40% reduction in processing time through automation, improving team productivity
        â€¢ Implemented new CRM system that improved customer retention by 30%
        â€¢ Developed data pipeline that processed 1M+ records daily, enabling real-time analytics
        â€¢ Managed $2M budget and delivered 15% cost savings through vendor negotiations
        '''
    }
    
    result3 = analyze_resume_health(strong_resume)
    print(f"Overall Grade: {result3.overall_grade.value}")
    print(f"Overall Score: {result3.overall_score:.1f}/100")
    print(f"Summary: {result3.summary}")
    
    impact3 = result3.dimension_scores['impact']
    print(f"\nImpact Analysis:")
    print(f"Grade: {impact3.grade.value}")
    print(f"Score: {impact3.score:.1f}/100")
    print("Feedback:")
    for feedback in impact3.feedback:
        print(f"  â€¢ {feedback}")
    print("Suggestions:")
    for suggestion in impact3.suggestions:
        print(f"  â€¢ {suggestion}")
    
    # Test Case 4: Empty resume
    print("\nðŸ“‹ Test Case 4: Empty Resume")
    print("-" * 40)
    
    empty_resume = {
        'experience': ''
    }
    
    result4 = analyze_resume_health(empty_resume)
    print(f"Overall Grade: {result4.overall_grade.value}")
    print(f"Overall Score: {result4.overall_score:.1f}/100")
    print(f"Summary: {result4.summary}")
    
    impact4 = result4.dimension_scores['impact']
    print(f"\nImpact Analysis:")
    print(f"Grade: {impact4.grade.value}")
    print(f"Score: {impact4.score:.1f}/100")
    print("Feedback:")
    for feedback in impact4.feedback:
        print(f"  â€¢ {feedback}")
    print("Suggestions:")
    for suggestion in impact4.suggestions:
        print(f"  â€¢ {suggestion}")
    
    # Summary of all results
    print("\nðŸ“Š Summary of All Test Cases")
    print("=" * 60)
    print(f"1. Weak Resume:     {result1.overall_grade.value} ({result1.overall_score:.1f}/100)")
    print(f"2. Mixed Resume:    {result2.overall_grade.value} ({result2.overall_score:.1f}/100)")
    print(f"3. Strong Resume:   {result3.overall_grade.value} ({result3.overall_score:.1f}/100)")
    print(f"4. Empty Resume:    {result4.overall_grade.value} ({result4.overall_score:.1f}/100)")
    
    print("\nðŸŽ¯ Key Insights:")
    print("â€¢ Strong action verbs (increased, led, achieved) boost scores significantly")
    print("â€¢ Quantifiable results (25%, $500K, 40%) are highly valued")
    print("â€¢ Weak verbs (helped, assisted, was responsible for) reduce scores")
    print("â€¢ Clear outcomes and results improve impact scores")
    print("â€¢ The analyzer provides specific feedback and actionable suggestions")

if __name__ == "__main__":
    test_impact_analyzer()


